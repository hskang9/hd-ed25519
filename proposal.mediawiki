---
pip: 0
title: Multi-Account Hierarchy for Deterministic Wallets on parachains
author: Hyungsuk Kang(hskang9@gmail.com)
contact: hskang9@gmail.com
discussions-to: https://github.com/SpeckleOS/speckle-wallet-lib/issues
status: Draft with implementation
type: Standards Track
category: Core(cryptography)
created: 2019-04-29
---

==Abstract==


This document introduces hierarchical deterministic keys for Polkadot, Substrate and the Speckle Browser to achieve following benefit:

# Removing neccessity for backup on randomly generated keys in parachain nodes
# Recoverable multi-accounts
# Selective asset sharing by derived accounts from the root
# Identify parachain protocol and prepare client component for interacting with each unique parachain

==Motivation==
Keys are used in blockchain protocol in many forms. 
* The need for subsidizing generating new accounts for parachains
* Enables retrieval for parachain accounts from master key
* bip architecture is poorly suited to substrate
* each parachain has different system to operate their protocol



==Related Works==

- BIP 32

BIP 32 describes the idea of deterministic wallets by extended keys using serialized byte array called "path". the path has hierarchy to identify the account for its use cases.

Implementation is [https://github.com/cryptocoinjs/hdkey/blob/e2e55694d37441b6a60c49015036525d8315e656/lib/hdkey.js#L219 here]

- BIP 39

Mnemonic phrases are introduced to generate recoverable account which user needs to remember the secret words to regenerate private keys

Implementation [https://github.com/bitcoinjs/bip39/blob/cd6bcdbb2e1c363f72c9e04a4b7dca60b359b092/src/index.js here]

- BIP 44

BIP 44 provides specific use cases on how to implement levels of path to distinguish wallets in different protocol such as examples below:

{|
!coin
!account
!chain
!address
!path
|-
|Bitcoin
|first
|external
|first
|m / 44' / 0' / 0' / 0 / 0
|-
|Bitcoin
|first
|external
|second
|m / 44' / 0' / 0' / 0 / 1
|-
|Bitcoin
|first
|change
|first
|m / 44' / 0' / 0' / 1 / 0
|-
|Bitcoin
|first
|change
|second
|m / 44' / 0' / 0' / 1 / 1
|-
|Bitcoin
|second
|external
|first
|m / 44' / 0' / 1' / 0 / 0
|-
|Bitcoin
|second
|external
|second
|m / 44' / 0' / 1' / 0 / 1
|-
|Bitcoin
|second
|change
|first
|m / 44' / 0' / 1' / 1 / 0
|-
|Bitcoin
|second
|change
|second
|m / 44' / 0' / 1' / 1 / 1
|-
|}

- EIP 600 - Ethereum purpose allocation for Deterministic Wallets

[https://github.com/Arachnid/EIPs/blob/9ebee88ad531928645b2ebbb944185736c3554bb/eip-600.md proposal]

User approved account

[https://www.youtube.com/watch?v=v4Aitn6TyCk Meta-metamask: Integrating Layer 2 in Metamask for scaling]


==Specifcations==

Specification consists of key and hierarchy for derivation.

Key specifaction follows [https://github.com/satoshilabs/slips/blob/master/slip-0010.md SLIP-0010].

Hierarchy has the following path levels.

==Path levels==

We define the following 4 levels to identify parachain account.

<pre>
m / purpose' / chain_type' / account' / address_index
</pre>


====Purpose====
It indicates that the subtree of this node is used according to this specification.

====Chain type====
Chain type is an indicator of the use of the parachain protocol. Chain type is often used to identify key's use and generate client components to interact with parachain.

====Account====
Account is for specifying the usage of account. For example, in parachain which acts like Beam, accounts can be constantly changed due to ensuring privacy.

====Index====
Index is for indexing multiple accounts generated in previous levels.

==Account discovery==
As in BIP44, when the master seed generated by mnemonic discover the accounts in the following manner:

# derive the first account's node (index = 0)
# derive the external chain node of this account
# scan addresses of the external chain; respect the gap limit described below
# if no transactions are found on the external chain, stop discovery
# if there are some transactions, increase the account index and go to step 1

==Address gap limit==


==Registered chain types==

Registered chain types helps an account to identify itself and successfully operate in the parachain network.
For example, zerochain requires the account key to be used for encryption of the user's state. Identifying those keys with hierarchy derivation can help
client software to understand its uses and make components which is needed for interacting with the parachain.

==Examples==

==Reference==

- [[https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki|BIP32 - Hierarchical Deterministic Wallets]]

- [[https://github.com/bitcoin/bips/blob/master/bip-0043.mediawiki|BIP43 - Purpose Field for Deterministic Wallets]]

- [[https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki|BIP44 - Multi-Account Hierarchy for Deterministic Wallets]]

- [[https://github.com/Arachnid/EIPs/blob/9ebee88ad531928645b2ebbb944185736c3554bb/eip-600.md|EIP600 - Ethereum purpose allocation for Deterministic Wallets]]

- [[https://www.youtube.com/watch?v=v4Aitn6TyCk|Meta-metamask: Integrating Layer 2 in Metamask for scaling]]

